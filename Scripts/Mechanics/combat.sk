on damage:
	attacker is player
	attacker's attack is critical
	wait 1 ticks
	set {_misc} to held item of attacker
	if {_misc} is any sword:
		set {_misc} to {_misc}.getType()
		event.getDamager().hasCooldown({_misc}) = false
		event.getDamager().setCooldown({_misc}, 100)
	else if {_misc} is any axe:
		set {_misc} to {_misc}.getType()
		event.getDamager().hasCooldown({_misc}) = false
		event.getDamager().setCooldown({_misc}, 140)
	else if {_misc} is trident:
		set {_misc} to {_misc}.getType()
		event.getDamager().hasCooldown({_misc}) = false
		event.getDamager().setCooldown({_misc}, 80)
	else if {_misc} is any tool:
		set {_misc} to {_misc}.getType()
		event.getDamager().hasCooldown({_misc}) = false
		event.getDamager().setCooldown({_misc}, 120)

on damage:
	attacker is player
	held item of attacker is any tool or any sword
	set {_misc} to held item of attacker
	set {_misc} to {_misc}.getType()
	attacker.hasCooldown({_misc}) = true
	cancel event

on damage of player:
	victim is blocking
	if victim's offhand tool is shield:
		set {_misc} to offhand tool of victim
		set offhand tool of victim to air
		wait 2 ticks
		set offhand tool of victim to {_misc}
	else if victim's tool is shield:
		set {_misc} to tool of victim
		set tool of victim to air
		wait 2 ticks
		set tool of victim to {_misc}
	set {_misc} to {_misc}.getType()
	victim.hasCooldown({_misc}) = false
	victim.setCooldown({_misc}, 30)

function calculate_util(n: number) :: number:
	set {_n} to 20 if {_n} > 20
	set {_n} to {_n}/20
	return {_n}

on damage:
	event is not canceled
	damage cause is not unknown
	victim is not armor stand or dropped item
	if attacker's attack is critical:
		bind hologram "&cCritical!" or "&4Critical!" or "<##CB5B5B>Critical!" or "<##8C1212>Critical!" or "<##601818>Critical!" to victim for 2 seconds offset by (random number between -0.5 and 0.5), (random number between 2.75 and 3.25), (random number between -0.5 and 0.5)
	set {_util} to calculate_util(final damage*2) + 2.25
	
	bind hologram "&c-%(final damage*2)%" to victim for 1 second offset by 0, {_util}, 0

on heal:
	event is not canceled
	event-entity is not armor stand or dropped item
	health of event-entity != max health of event-entity
	heal amount is not 0
	set {_util} to calculate_util(heal amount*2) + 2.25
	bind hologram "&a+%(heal amount)*2%" to event-entity for 1 second offset by 0, {_util}, 0
