# Copyright 2021  FokaStudio

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Coded by: FokaStudio
# Original by: X
# Addons required: skript-mirror
# Other plugins: X


expression [WaystoneAPI] location of waystone [with id] %int%:
	return type: location
	get:
		return {waystonelocation::%expr-1%}

expression [WaystoneAPI] id of waystone at %location%:
	return type: int
	get:
		return {waystoneid::%expr-1%}

offline player property [WaystoneAPI] learned waystone[s]:
	return type: locations
	get:
		return {waystone.learned::%uuid of expr-1%::*}
	add:
		set {waystone.learned::%uuid of expr-1%::*} to {waystone.learned::%uuid of expr-1%::*} and change value
	remove:
		remove change value from {waystone.learned::%uuid of expr-1%::*}
	reset:
		clear {waystone.learned::%uuid of expr-1%::*}

expression [WaystoneAPI] link of waystone [with id] %int%:
	return type: int
	get:
		return {waystone::%expr-1%::linked}

expression [WaystoneAPI] name of waystone [with id] %int%:
	return type: string
	get:
		return {waystone::%expr-1%::name}
	set:
		set {waystone::%expr-1%::name} to change value

expression [WaystoneAPI] owner of waystone [with id] %int%:
	return type: offline player
	get:
		return {waystone::%expr-1%::owner}
	set:
		set {waystone::%expr-1%::owner} to change value

expression [WaystoneAPI] icon of waystone [with id] %int%:
	return type: itemtype
	get:
		return {waystone::%expr-1%::icon}
	set:
		set {waystone::%expr-1%::icon} to change value
		
effect [WaystoneAPI] register [new] waystone [(using|with|owned by)] [owner] %player% at %location%:
	trigger:
		add 1 to {waystone.count}
		set {_id} to {waystone.count}
		set {waystone::%{_id}%::name} to "&7Waystone &b##%{_id}%"
		set {waystone::%{_id}%::owner} to expr-1
		set {waystone::%{_id}%::icon} to lodestone
		set {waystonelocation::%{_id}%} to expr-2
		add expr-2 to {waystone.learned::%uuid of expr-1%::*}
		set {_loc} to {waystonelocation::%{_id}%}
		set {waystoneid::%{_loc}%} to {_id}
		send "&fNew Waystone discovered! %{waystone::%{_id}%::name}%" to expr-1

effect [WaystoneAPI] unregister waystone with id %int%:
	trigger:
		set {_loc} to {waystonelocation::%expr-1%}
		delete {waystoneid::%expr-1%}
		delete {waystone::%expr-1%::name}
		delete {waystone::%expr-1%::owner}
		delete {waystone::%expr-1%::icon}
		delete {waystonelocation::%expr-1%}
		loop all offline players:
			remove {_loc} from {waystone.learned::%uuid of loop-value%::*}

effect [WaystoneAPI] link waystone[s] %int% (and|&) %int% (using|with) [data (of|from)] %player%:
	trigger:
		loop all offline players:
			remove (location of waystone with id expr-1) from {waystone.learned::%uuid of loop-value%::*}
			remove (location of waystone with id expr-2) from {waystone.learned::%uuid of loop-value%::*}
		set {waystone::%expr-1%::linked} to expr-2
		set {waystone::%expr-2%::linked} to expr-1
		clear metadata value "lodestone.linking" of expr-3
		remove "lodestone.waystone_link" from scoreboard tags of expr-3

condition [WaystoneAPI] waystone [with id] %int% is linked:
	check:
		{waystone::%expr-1%::linked} is set
		continue

condition [WaystoneAPI] waystone [with id] %int% was learned by %player%:
	check:
		{waystone.learned::%uuid of expr-2%::*} contains {_loc}
		continue

condition [WaystoneAPI] waystone at %location% exists:
	check:
		if {waystonelocation::*} contains expr-1:
			continue